
type Process  {
  id: ID!
  processNumber: String!
  court: Court!
  origin: String
  judge: String
  activePart: String
  passivePart: String
  createdAt: String!
  updatedAt: String!
  deletedAt: String
}

enum Court {
  TJPE
}

type ProcessList {
  nodes: [Process!]!
  count: Int!
  hasNextPage: Boolean!
}

extend type Mutation {
  FollowProcess(processNumber: String!): Process! @auth
}

type Query {
  GetProcessList(limit: Int!, offset: Int!): ProcessList! @auth
}
